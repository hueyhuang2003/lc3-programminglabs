.ORIG x3000
AND R1, R1, #0 
AND R6, R6, #0 
AND R2, R2, #0 
AND R3, R3, #0 
AND R4, R4, #0 ;KEEPS TRACK OF WHOSE TURN IT IS , IF R4 = 0 ITS P1'S TURN, IF R4 = 1 ITS P2'S TURN
AND R5, R5, #0
AND R7, R7, #0

SHOWSTATE LEA R0, ROWA
PUTS
LDI R3, ROWAROCKS
BRZ STATEB
JSR PRINTROCKS
STATEB LD R0, NEWLINECHAR
OUT
LEA R0, ROWB
PUTS
LDI R3, ROWBROCKS
BRZ STATEC
JSR PRINTROCKS
STATEC LD R0, NEWLINECHAR
OUT
LEA R0, ROWC
PUTS
LDI R3, ROWCROCKS
BRZ STARTTURN
JSR PRINTROCKS
STARTTURN LD R0, NEWLINECHAR
OUT
OUT
BRNZP PLAYERTURN

PRINTROCKS LD R0, ROCKCHAR
OUT
ADD R3, R3, #-1
BRZ GOBACK
BRNZP PRINTROCKS
GOBACK RET

PLAYERTURN ADD R4, R4, #0
BRZ P1TURN
P2TURN ADD R4, R4, #-1
LEA R0, PROMPT2
PUTS
BRNZP STOREVALS
P1TURN ADD R4, R4, #1
LEA R0, PROMPT1
PUTS
STOREVALS AND R0, R0, #0
GETC 
STI R0, CHOSENROW
AND R0, R0, #0
GETC 
STI R0, ROCKS2REMOVE
LD R0, NEWLINECHAR
OUT
BRNZP EDITROCKS

HANDLEINPUTERROR LEA R0, ERRORPROMPT
PUTS
LD R0, NEWLINECHAR
OUT
ADD R4, R4, #-1
BRZ RESETPLAYER1 
RESETPLAYER2 LD R4, HEXONE
RESETPLAYER1 LD R4, HEXZERO
BRNZP PLAYERTURN

EDITROCKS LDI R2, CHOSENROW
NOT R2, R2
ADD R2, R2, #1
LDI, R3, ROCKS2REMOVE
JSR CONVERTROCKS
CONTINUE LD, R5, HEXA
ADD R5, R5, R2
BRZ EDITA
LD R5, HEXLOWERCASEA
ADD R5, R5, R2
BRZ EDITA
LD, R5, HEXB
ADD R5, R5, R2
BRZ EDITB
LD R5, HEXLOWERCASEB
ADD R5, R5, R2
BRZ EDITB
LD, R5, HEXC
ADD R5, R5, R2
BRZ EDITC
LD R5, HEXLOWERCASEC
ADD R5, R5, R2
BRZ EDITC
BRNZP HANDLEINPUTERROR

EDITA LDI R5, ROWAROCKS
JSR MODROCKS
STI R2, ROWAROCKS
JSR CHECKWIN
BRNZP SHOWSTATE

EDITB LDI R5, ROWBROCKS
JSR MODROCKS
STI R2, ROWBROCKS
JSR CHECKWIN
BRNZP SHOWSTATE

EDITC LDI R5, ROWCROCKS
JSR MODROCKS
STI R2, ROWCROCKS
JSR CHECKWIN
BRNZP SHOWSTATE

MODROCKS NOT R3, R3 
ADD R3, R3, #1 ;CONVERT R3 TO NEGATIVE 
ADD R2, R3, R5 ;FIND DIFFERENCE IN ROCKS AND STORE VAL IN R2
ADD R5, R5, #-1
BRZ SKIPZEROCONDITION ;IF R5 = ZERO, THAT MEANS THERE IS ONLY ONE ROCK LEFT IN THE ROW
ADD R2, R2, #0
BRZ HANDLEINPUTERROR
SKIPZEROCONDITION ADD R2, R2, #0
BRN HANDLEINPUTERROR
RET

ANNOUNCEWINNER ADD R4, R4, #-1
BRN PTWOWINS
PONEWINS LEA R0, WINPROMPT1
PUTS 
BRNZP STOPGAME
PTWOWINS LEA R0, WINPROMPT2
PUTS 
BRNZP STOPGAME

CONVERTROCKS LD R5, ASCIIZERO ;THIS SUBROUTINES CONVERTS HEX VALUE INPUT FOR THE NUMBER OF ROCKS THE PLAYER WISHES TO REMOVE INTO DECIMAL FORMAT
NOT R5, R5
ADD R5, R5, #1
ADD R5, R3, R5
BRNZ HANDLEINPUTERROR ;USER EITHER INPUT ZERO OR VAL LESS THAN ZERO
LD R5, ASCIIEIGHT
NOT R5, R5
ADD R5, R5, #1
ADD R5, R3, R5
BRP HANDLEINPUTERROR ;USER EITHER INPUT VAL GREATER THAN 8
LD R5, ASCIIZERO
NOT R5, R5
ADD R5, R5, #1
ADD R3, R3, R5
RET

CHECKWIN AND R5, R5, #0
LDI R3, ROWAROCKS
BRP CHECKB ;CHECK IF ROW A EMPTY
ADD R5, R5, #1
CHECKB LDI R3, ROWBROCKS 
BRP CHECKC ;CHECK IF ROW B EMPTY
ADD R5, R5, #1
CHECKC LDI R3, ROWCROCKS
BRP CHECKSTATE ;CHECK IF ROW C EMPTY
ADD R5, R5, #1
CHECKSTATE ADD R5, R5, #-3
BRZ FINISHGAME
RET
FINISHGAME BRNZP ANNOUNCEWINNER

ROWA .STRINGZ "ROW A: "
ROWB .STRINGZ "ROW B: "
ROWC .STRINGZ "ROW C: "
ROCKCHAR .FILL x006F
NEWLINECHAR .FILL x000A 
ROWAROCKS .FILL x4000
ROWBROCKS .FILL x4001
ROWCROCKS .FILL x4002
CHOSENROW .FILL x4003
ROCKS2REMOVE .FILL x4004
HEXA .FILL x0041
HEXLOWERCASEA .FILL x0061
HEXB .FILL x0042
HEXLOWERCASEB .FILL x0062
HEXC .FILL x0043
HEXLOWERCASEC .FILL x0063
ASCIIZERO .FILL x0030 ;ASCII VALUE FOR THE # O IN HEXADECIMAL FORMAT
ASCIIEIGHT .FILL x0038 
HEXZERO .FILL x0000
HEXONE .FILL x0001
PROMPT1 .STRINGZ "Player 1, choose a row and number of rocks: "
PROMPT2 .STRINGZ "Player 2, choose a row and number of rocks: "
ERRORPROMPT .STRINGZ "Invalid move. Try again"
WINPROMPT1 .STRINGZ "Player 1 Wins."
WINPROMPT2 .STRINGZ "Player 2 Wins."

STOPGAME HALT

.END

.ORIG x4000
.FILL x0003 ;MEMORY SPACE HOLDING # OF ROCKS IN ROW A
.FILL x0005 ;MEMORY SPACE HOLDING # OF ROCKS IN ROW B
.FILL x0008 ;MEMORY SPACE HOLDING # OF ROCKS IN ROW C
.FILL x0000 ;MEMORY SPACE HOLDING THE ROW THAT THE PLAYER CHOSE
.FILL x0000 ;MEMORY SPACE HOLDING # OF ROCKS THAT PLAYER WANTS TO REMOVE

HALT

.END
